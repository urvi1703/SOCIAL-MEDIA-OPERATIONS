# -*- coding: utf-8 -*-
"""discord

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1k_10DYYyELQNTT9-w8jFuisx-SiAhBri
"""

import requests

# Replace with your Discord Webhook URL
webhook_url = "https://discord.com/api/webhooks/1313062399561171044/Gwc6Z91G-cPKfVO2CzmAmbw3dQpfXcZp7nA_J-iicN_m6vR7jB5YHXaUqbxIXqMkavcH"

# Message content
message = {
    "content": "Hello, Discord! This message is sent from Python in Google Colab. ðŸš€"
}

# Send POST request
response = requests.post(webhook_url, json=message)

# Check response
if response.status_code == 204:
    print("Message sent successfully!")
else:
    print(f"Failed to send message. Status code: {response.status_code}")

message_with_embed = {
    "content": "Check out this cool embed!",
    "embeds": [
        {
            "title": "Python Automation",
            "description": "This message was sent using a webhook and Python.",
            "url": "https://www.python.org",
            "color": 5814783,  # Hex color code (e.g., #58A6FF)
            "footer": {"text": "Powered by Python ðŸš€"}
        }
    ]
}

response = requests.post(webhook_url, json=message_with_embed)

if response.status_code == 204:
    print("Message with embed sent successfully!")
else:
    print(f"Failed to send message. Status code: {response.status_code}")

message_with_image = {
    "content": "Here's an image!",
    "embeds": [
        {
            "title": "Check out this picture!",
            "image": {"url": "https://wallpapershome.com/images/pages/pic_h/5186.jpg"}
        }
    ]
}

response = requests.post(webhook_url, json=message_with_image)

if response.status_code == 204:
    print("Image sent successfully!")
else:
    print(f"Failed to send image. Status code: {response.status_code}")

import requests

# Replace with your Discord Webhook URL
webhook_url = "https://discord.com/api/webhooks/1313062399561171044/Gwc6Z91G-cPKfVO2CzmAmbw3dQpfXcZp7nA_J-iicN_m6vR7jB5YHXaUqbxIXqMkavcH"

# Message contentThis message is sent from Python in Google Colab. ðŸš€"
message = {
    "content": "Hello, Discord!"
}

# Send POST request
response = requests.post(webhook_url, json=message)

# Check response
if response.status_code == 204:
    print("Message sent successfully!")
else:
    print(f"Failed to send message. Status code: {response.status_code}")

import time

for i in range(5):  # Send 5 messages
    message = {"content": f"Automated Message #{i+1}"}
    response = requests.post(webhook_url, json=message)

    if response.status_code == 204:
        print(f"Message #{i+1} sent successfully!")
    else:
        print(f"Failed to send message #{i+1}. Status code: {response.status_code}")

    time.sleep(10)  # Wait 10 seconds before sending the next message


import streamlit as st

# Placeholder for Discord operations
def main():
    st.write("Welcome to Discord Operations!")

    action = st.selectbox("Choose an action", ["Send a Message", "Read Messages", "Update a Message", "Delete a Message"])

    if action == "Send a Message":
        # Add functionality to send a message to a Discord channel
        channel_id = st.text_input("Enter Channel ID:")
        message = st.text_input("Enter your message:")
        if st.button("Send Message"):
            # Call Discord API to send the message
            st.success(f"Message sent to channel {channel_id} successfully!")

    elif action == "Read Messages":
        # Add functionality to fetch messages from a Discord channel
        channel_id = st.text_input("Enter Channel ID:")
        if st.button("Fetch Messages"):
            # Call Discord API to fetch messages
            st.write(f"Fetching messages from channel {channel_id}...")

    elif action == "Update a Message":
        # Add functionality to update an existing message in a Discord channel
        message_id = st.text_input("Enter Message ID:")
        updated_message = st.text_input("Enter the updated message:")
        if st.button("Update Message"):
            # Call Discord API to update the message
            st.success(f"Message {message_id} updated successfully!")

    elif action == "Delete a Message":
        # Add functionality to delete a message from a Discord channel
        message_id = st.text_input("Enter Message ID:")
        if st.button("Delete Message"):
            # Call Discord API to delete the message
            st.success(f"Message {message_id} deleted successfully!")

if __name__ == "__main__":
    main()
